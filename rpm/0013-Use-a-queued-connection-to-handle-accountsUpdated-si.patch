From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Chris Adams <chris.adams@jolla.com>
Date: Tue, 19 Jan 2021 16:29:41 +1000
Subject: [PATCH] Use a queued connection to handle accountsUpdated signal

If a socket read results in a change to an accounts' settings (e.g.
available folders) then we need to handle the accountsUpdated signal
asynchronously to avoid deleting the socket out from underneath the
code which caused the database change, otherwise crashes can result
(specifically, in the ImapProtocol::incomingData method).
---
 src/plugins/messageservices/imap/imapservice.cpp | 2 +-
 src/plugins/messageservices/pop/popservice.cpp   | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/plugins/messageservices/imap/imapservice.cpp b/src/plugins/messageservices/imap/imapservice.cpp
index 498698cb..f9543176 100644
--- a/src/plugins/messageservices/imap/imapservice.cpp
+++ b/src/plugins/messageservices/imap/imapservice.cpp
@@ -1498,7 +1498,7 @@ ImapService::ImapService(const QMailAccountId &accountId)
     }
     connect(_restartPushEmailTimer, SIGNAL(timeout()), this, SLOT(restartPushEmail()));
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
     connect(_initiatePushEmailTimer, SIGNAL(timeout()), this, SLOT(initiatePushEmail()));
 
     QDBusConnection::sessionBus().connect("com.meego.msyncd", "/synchronizer",
diff --git a/src/plugins/messageservices/pop/popservice.cpp b/src/plugins/messageservices/pop/popservice.cpp
index ef7cbf45..bb1fbc5f 100644
--- a/src/plugins/messageservices/pop/popservice.cpp
+++ b/src/plugins/messageservices/pop/popservice.cpp
@@ -328,7 +328,7 @@ PopService::PopService(const QMailAccountId &accountId)
     connect(&_client, SIGNAL(errorOccurred(QMailServiceAction::Status::ErrorCode, QString)), this, SLOT(errorOccurred(QMailServiceAction::Status::ErrorCode, QString)));
     connect(&_client, SIGNAL(updateStatus(QString)), this, SLOT(updateStatus(QString)));
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
 
     QMailAccountConfiguration accountCfg(accountId);
     PopConfiguration popCfg(accountCfg);
