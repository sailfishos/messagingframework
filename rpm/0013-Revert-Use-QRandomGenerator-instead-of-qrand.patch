From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Damien Caliste <dcaliste@free.fr>
Date: Wed, 19 May 2021 08:58:39 +0200
Subject: [PATCH] Revert "Use QRandomGenerator instead of qrand"

This reverts commit 9c8962c1942eec471d495b3d11436087e7d46cdd.
---
 src/libraries/qmfclient/qmailmessage.cpp      | 22 +++++++++++++++++--
 .../qmfstoragemanager/qmfstoragemanager.cpp   |  3 +--
 .../messageservices/smtp/smtpclient.cpp       | 12 ++++++++--
 3 files changed, 31 insertions(+), 6 deletions(-)

diff --git a/src/libraries/qmfclient/qmailmessage.cpp b/src/libraries/qmfclient/qmailmessage.cpp
index 5a59cb6e..0b9cb32b 100644
--- a/src/libraries/qmfclient/qmailmessage.cpp
+++ b/src/libraries/qmfclient/qmailmessage.cpp
@@ -53,7 +53,6 @@
 #include <QFile>
 #include <QFileInfo>
 #include <QRegularExpression>
-#include <QRandomGenerator>
 #include <QDataStream>
 #include <QTextStream>
 #include <QTextCodec>
@@ -7973,6 +7972,25 @@ uint QMailMessagePrivate::indicativeSize() const
     return (size + 1);
 }
 
+static uint currentTimeValue()
+{
+    return QDateTime::currentDateTime().toTime_t();
+}
+
+static bool seedRng()
+{
+    qsrand(currentTimeValue());
+    return true;
+}
+
+static int randomNumber()
+{
+    static bool initialised = seedRng();
+    Q_UNUSED(initialised)
+
+    return qrand();
+}
+
 static QByteArray gBoundaryString;
 
 void QMF_EXPORT setQMailMessageBoundaryString(const QByteArray &boundary)
@@ -7989,7 +8007,7 @@ static QByteArray boundaryString(const QByteArray &hash)
         return gBoundaryString;
 
     // Formulate a boundary that is very unlikely to clash with the content
-    return boundaryLeader + "qmf:" + QByteArray::number(QRandomGenerator::global()->generate()) + hash.toBase64() + boundaryTrailer;
+    return boundaryLeader + "qmf:" + QByteArray::number(randomNumber()) + hash.toBase64() + boundaryTrailer;
 }
 
 template <typename F>
diff --git a/src/plugins/contentmanagers/qmfstoragemanager/qmfstoragemanager.cpp b/src/plugins/contentmanagers/qmfstoragemanager/qmfstoragemanager.cpp
index 60def58c..d5043ea5 100644
--- a/src/plugins/contentmanagers/qmfstoragemanager/qmfstoragemanager.cpp
+++ b/src/plugins/contentmanagers/qmfstoragemanager/qmfstoragemanager.cpp
@@ -42,7 +42,6 @@
 #include <QFile>
 #include <QtPlugin>
 #include <QUrl>
-#include <QRandomGenerator>
 #if defined(Q_OS_WIN)
 #include <windows.h>
 #include <io.h>
@@ -77,7 +76,7 @@ QString randomString(int length)
 
     int i = 0;
     while (length--) {
-        int r=QRandomGenerator::global()->generate() % 62;
+        int r=qrand() % 62;
         r+=48;
         if (r>57) r+=7;
         if (r>90) r+=6;
diff --git a/src/plugins/messageservices/smtp/smtpclient.cpp b/src/plugins/messageservices/smtp/smtpclient.cpp
index 2ec306b9..7203858c 100644
--- a/src/plugins/messageservices/smtp/smtpclient.cpp
+++ b/src/plugins/messageservices/smtp/smtpclient.cpp
@@ -43,7 +43,6 @@
 #include <QDir>
 #include <QHostInfo>
 #include <QNetworkInterface>
-#include <QRandomGenerator>
 #include <QRegExp>
 #ifndef QT_NO_SSL
 #include <QSslSocket>
@@ -59,9 +58,18 @@
 // Only this many bytes is queued to be sent at a time.
 #define SENDING_BUFFER_SIZE 5000
 
+static bool initialiseRng()
+{
+    qsrand(QDateTime::currentDateTime().toUTC().toTime_t());
+    return true;
+}
+
 static QByteArray messageId(const QByteArray& domainName, quint32 addressComponent)
 {
-    quint32 randomComponent(QRandomGenerator::global()->generate());
+    static bool rngInitialised(initialiseRng());
+    Q_UNUSED(rngInitialised)
+
+    quint32 randomComponent(static_cast<quint32>(qrand()));
     quint32 timeComponent(QDateTime::currentDateTimeUtc().toMSecsSinceEpoch() / 1000);
 
     return ('<' +
