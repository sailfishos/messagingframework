From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Damien Caliste <dcaliste@free.fr>
Date: Tue, 21 Nov 2023 09:51:51 +0100
Subject: [PATCH] Adjust for Qt 5.6

---
 src/libraries/qmfclient/libaccounts_p.cpp     |  4 ++--
 src/libraries/qmfclient/mailkeyimpl_p.h       |  6 ++---
 src/libraries/qmfclient/mailsortkeyimpl_p.h   |  4 ++--
 src/libraries/qmfclient/qmailkeyargument.h    |  2 +-
 src/libraries/qmfclient/qmailmessageset.h     | 24 +++++++++++++++++++
 .../qmfmessageserver/qmailtransport.cpp       |  4 ++--
 tests/tst_smtp/tst_smtp.cpp                   | 18 +++++++-------
 7 files changed, 43 insertions(+), 19 deletions(-)

diff --git a/src/libraries/qmfclient/libaccounts_p.cpp b/src/libraries/qmfclient/libaccounts_p.cpp
index 79645a03..390e73e8 100644
--- a/src/libraries/qmfclient/libaccounts_p.cpp
+++ b/src/libraries/qmfclient/libaccounts_p.cpp
@@ -569,7 +569,7 @@ QMailAccount LibAccountManager::account(const QMailAccountId &id) const
     if ((static_cast<uint>(account->valueAsUInt64(QLatin1String("lastSynchronized")))) == 0) {
         result.setLastSynchronized(QMailTimeStamp());
     } else {
-        result.setLastSynchronized(QMailTimeStamp(QDateTime::fromSecsSinceEpoch(static_cast<uint>(account->valueAsUInt64(QLatin1String("lastSynchronized"))))));
+        result.setLastSynchronized(QMailTimeStamp(QDateTime::fromTime_t(static_cast<uint>(account->valueAsUInt64(QLatin1String("lastSynchronized"))))));
     }
 
     result.setIconPath(account->valueAsString(QLatin1String("iconPath")));
@@ -924,7 +924,7 @@ bool LibAccountManager::updateSharedAccount(QMailAccount *account,
         sharedAccount->setValue(QLatin1String("fullName"), account->fromAddress().name());
         sharedAccount->setValue(QLatin1String("emailAliases"), toStringList(account->fromAliases()));
         if (account->lastSynchronized().isValid()) {
-            sharedAccount->setValue(QLatin1String("lastSynchronized"), static_cast<quint64>(account->lastSynchronized().toLocalTime().toSecsSinceEpoch()));
+            sharedAccount->setValue(QLatin1String("lastSynchronized"), static_cast<quint64>(account->lastSynchronized().toLocalTime().toTime_t()));
         } else {
             sharedAccount->setValue(QLatin1String("lastSynchronized"), quint64(0));
         }
diff --git a/src/libraries/qmfclient/mailkeyimpl_p.h b/src/libraries/qmfclient/mailkeyimpl_p.h
index 1ba71738..8e3da7a7 100644
--- a/src/libraries/qmfclient/mailkeyimpl_p.h
+++ b/src/libraries/qmfclient/mailkeyimpl_p.h
@@ -295,16 +295,16 @@ void MailKeyImpl<Key>::deserialize(Stream &stream)
     combiner = static_cast<QMailKey::Combiner>(i);
     stream >> negated;
 
-    qsizetype s;
+    int s;
     stream >> s;
-    for (qsizetype j = 0; j < s; ++j) {
+    for (int j = 0; j < s; ++j) {
         Argument a;
         a.deserialize(stream);
         arguments.append(a);
     }
 
     stream >> s;
-    for (qsizetype j = 0; j < s; ++j) {
+    for (int j = 0; j < s; ++j) {
         Key subKey;
         subKey.deserialize(stream);
         subKeys.append(subKey);
diff --git a/src/libraries/qmfclient/mailsortkeyimpl_p.h b/src/libraries/qmfclient/mailsortkeyimpl_p.h
index d6171f62..95cd5e9f 100644
--- a/src/libraries/qmfclient/mailsortkeyimpl_p.h
+++ b/src/libraries/qmfclient/mailsortkeyimpl_p.h
@@ -133,9 +133,9 @@ template<typename Key>
 template <typename Stream>
 void MailSortKeyImpl<Key>::deserialize(Stream &stream)
 {
-    qsizetype i = 0;
+    int i = 0;
     stream >> i;
-    for (qsizetype j = 0; j < i; ++j) {
+    for (int j = 0; j < i; ++j) {
         Argument a;
         a.deserialize(stream);
         _arguments.append(a);
diff --git a/src/libraries/qmfclient/qmailkeyargument.h b/src/libraries/qmfclient/qmailkeyargument.h
index 04fc97af..eeff26d5 100644
--- a/src/libraries/qmfclient/qmailkeyargument.h
+++ b/src/libraries/qmfclient/qmailkeyargument.h
@@ -162,7 +162,7 @@ public:
         {
             clear();
 
-            qsizetype v = 0;
+            int v = 0;
             stream >> v;
             for (int i = 0; i < v; ++i) {
                 QVariant var;
diff --git a/src/libraries/qmfclient/qmailmessageset.h b/src/libraries/qmfclient/qmailmessageset.h
index 483c8c47..3f494b98 100644
--- a/src/libraries/qmfclient/qmailmessageset.h
+++ b/src/libraries/qmfclient/qmailmessageset.h
@@ -79,7 +79,11 @@ protected:
 
 private:
     // _D version and 'priv' to avoid collision with QObject::d_ptr
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
     Q_DECLARE_PRIVATE_D(priv, QMailMessageSetContainer)
+#else
+    Q_DECLARE_PRIVATE_D(QMailMessageSetContainer::priv.data(), QMailMessageSetContainer)
+#endif
     Q_DISABLE_COPY(QMailMessageSetContainer)
 
     friend class QMailMessageSet;
@@ -117,7 +121,11 @@ protected:
     virtual void init();
 
 private:
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
     Q_DECLARE_PRIVATE_D(priv, QMailMessageSet)
+#else
+    Q_DECLARE_PRIVATE_D(QMailMessageSet::priv.data(), QMailMessageSet)
+#endif
 };
 
 
@@ -155,7 +163,11 @@ protected:
     QMailFolderKey folderKey() const;
 
 private:
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
     Q_DECLARE_PRIVATE_D(priv, QMailFolderMessageSet)
+#else
+    Q_DECLARE_PRIVATE_D(QMailFolderMessageSet::priv.data(), QMailFolderMessageSet)
+#endif
 };
 
 
@@ -194,7 +206,11 @@ protected:
     QMailFolderKey rootFolderKey() const;
 
 private:
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
     Q_DECLARE_PRIVATE_D(priv, QMailAccountMessageSet)
+#else
+    Q_DECLARE_PRIVATE_D(QMailAccountMessageSet::priv.data(), QMailAccountMessageSet)
+#endif
 };
 
 
@@ -228,7 +244,11 @@ protected:
     void resyncState() override;
 
 private:
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
     Q_DECLARE_PRIVATE_D(priv, QMailFilterMessageSet)
+#else
+    Q_DECLARE_PRIVATE_D(QMailFilterMessageSet::priv.data(), QMailFilterMessageSet)
+#endif
 };
 
 
@@ -317,7 +337,11 @@ protected:
     virtual void updated(QMailMessageSet *child);
 
 private:
+#if (QT_VERSION >= QT_VERSION_CHECK(5, 9, 0))
     Q_DECLARE_PRIVATE_D(priv, QMailMessageSetModel)
+#else
+    Q_DECLARE_PRIVATE_D(QMailMessageSetModel::priv.data(), QMailMessageSetModel)
+#endif
 
     friend class QMailMessageSetContainer;
     friend class QMailMessageSet;
diff --git a/src/libraries/qmfmessageserver/qmailtransport.cpp b/src/libraries/qmfmessageserver/qmailtransport.cpp
index 337702ab..fe0fa111 100644
--- a/src/libraries/qmfmessageserver/qmailtransport.cpp
+++ b/src/libraries/qmfmessageserver/qmailtransport.cpp
@@ -189,13 +189,13 @@ void QMailTransport::createSocket(EncryptType encryptType)
     mSocket = new Socket(this);
     encryption = encryptType;
     connect(mSocket, &QSslSocket::encrypted, this, &QMailTransport::encryptionEstablished);
-    connect(mSocket, &QSslSocket::sslErrors, this, &QMailTransport::connectionFailed);
+    connect(mSocket, SIGNAL(sslErrors(QList<QSslError>)), this, SLOT(connectionFailed(QList<QSslError>)));
 
     const int bufferLimit = 101*1024; // Limit memory used when downloading
     mSocket->setReadBufferSize( bufferLimit );
     mSocket->setObjectName(QString::fromUtf8(mName) + QString::fromLatin1("-socket"));
     connect(mSocket, &QAbstractSocket::connected, this, &QMailTransport::connectionEstablished);
-    connect(mSocket, &QAbstractSocket::errorOccurred, this, &QMailTransport::socketError);
+    connect(mSocket, SIGNAL(error(QAbstractSocket::SocketError)), this, SLOT(socketError(QAbstractSocket::SocketError)));
     connect(mSocket, &QAbstractSocket::readyRead, this, &QMailTransport::readyRead);
     connect(mSocket, &QAbstractSocket::bytesWritten, this, &QMailTransport::bytesWritten);
 
diff --git a/tests/tst_smtp/tst_smtp.cpp b/tests/tst_smtp/tst_smtp.cpp
index 99d534af..104393fa 100644
--- a/tests/tst_smtp/tst_smtp.cpp
+++ b/tests/tst_smtp/tst_smtp.cpp
@@ -94,9 +94,9 @@ void tst_SmtpClient::test_connection()
     QVERIFY(completed.wait());
 
     QCOMPARE(updateStatus.count(), 3);
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("DNS lookup"));
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("Connected"));
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("Connected"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("DNS lookup"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("Connected"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("Connected"));
 }
 
 void tst_SmtpClient::test_auth()
@@ -115,9 +115,9 @@ void tst_SmtpClient::test_auth()
     QVERIFY(!completed.wait(250)); // Fails with wrong credentials
 
     QCOMPARE(updateStatus.count(), 3);
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("DNS lookup"));
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("Connected"));
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("Connected"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("DNS lookup"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("Connected"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("Connected"));
 
     smtp.setSmtpAuthentication(QMail::PlainMechanism);
     QVERIFY(QMailStore::instance()->updateAccountConfiguration(&config));
@@ -126,9 +126,9 @@ void tst_SmtpClient::test_auth()
     QVERIFY(!completed.wait(250)); // Fails with wrong credentials
 
     QCOMPARE(updateStatus.count(), 3);
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("DNS lookup"));
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("Connected"));
-    QCOMPARE(updateStatus.takeFirst().first(), QString::fromLatin1("Connected"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("DNS lookup"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("Connected"));
+    QCOMPARE(updateStatus.takeFirst().first().toString(), QString::fromLatin1("Connected"));
 }
 
 QTEST_MAIN(tst_SmtpClient)
