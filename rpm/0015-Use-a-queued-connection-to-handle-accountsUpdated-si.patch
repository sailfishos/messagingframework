From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Chris Adams <chris.adams@jolla.com>
Date: Tue, 19 Jan 2021 16:29:41 +1000
Subject: [PATCH] Use a queued connection to handle accountsUpdated signal

If a socket read results in a change to an accounts' settings (e.g.
available folders) then we need to handle the accountsUpdated signal
asynchronously to avoid deleting the socket out from underneath the
code which caused the database change, otherwise crashes can result
(specifically, in the ImapProtocol::incomingData method).
---
 src/plugins/messageservices/imap/imapclient.cpp  | 3 ++-
 src/plugins/messageservices/imap/imapservice.cpp | 2 +-
 src/plugins/messageservices/pop/popclient.cpp    | 3 ++-
 src/plugins/messageservices/pop/popservice.cpp   | 2 +-
 src/plugins/messageservices/smtp/smtpclient.cpp  | 2 +-
 src/plugins/messageservices/smtp/smtpservice.cpp | 2 +-
 6 files changed, 8 insertions(+), 6 deletions(-)

diff --git a/src/plugins/messageservices/imap/imapclient.cpp b/src/plugins/messageservices/imap/imapclient.cpp
index f92cb68f..9df0d4e1 100644
--- a/src/plugins/messageservices/imap/imapclient.cpp
+++ b/src/plugins/messageservices/imap/imapclient.cpp
@@ -450,7 +450,8 @@ ImapClient::ImapClient(QObject* parent)
 
     connect(QMailMessageBuffer::instance(), SIGNAL(flushed()), this, SLOT(messageBufferFlushed()));
 #ifdef USE_ACCOUNTS_QT
-    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)), this, SLOT(onAccountsUpdated(QMailAccountIdList)));
+    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)),
+            this, SLOT(onAccountsUpdated(QMailAccountIdList)), Qt::QueuedConnection);
 #endif
 }
 
diff --git a/src/plugins/messageservices/imap/imapservice.cpp b/src/plugins/messageservices/imap/imapservice.cpp
index 89831407..3376fcd4 100644
--- a/src/plugins/messageservices/imap/imapservice.cpp
+++ b/src/plugins/messageservices/imap/imapservice.cpp
@@ -1508,7 +1508,7 @@ ImapService::ImapService(const QMailAccountId &accountId)
     }
     connect(_restartPushEmailTimer, SIGNAL(timeout()), this, SLOT(restartPushEmail()));
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
     connect(_initiatePushEmailTimer, SIGNAL(timeout()), this, SLOT(initiatePushEmail()));
 
 #ifdef USE_KEEPALIVE
diff --git a/src/plugins/messageservices/pop/popclient.cpp b/src/plugins/messageservices/pop/popclient.cpp
index e3366fb6..b95c4dae 100644
--- a/src/plugins/messageservices/pop/popclient.cpp
+++ b/src/plugins/messageservices/pop/popclient.cpp
@@ -84,7 +84,8 @@ PopClient::PopClient(QObject* parent)
     connect(&inactiveTimer, SIGNAL(timeout()), this, SLOT(connectionInactive()));
     connect(QMailMessageBuffer::instance(), SIGNAL(flushed()), this, SLOT(messageBufferFlushed()));
 #ifdef USE_ACCOUNTS_QT
-    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)), this, SLOT(onAccountsUpdated(QMailAccountIdList)));
+    connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)),
+            this, SLOT(onAccountsUpdated(QMailAccountIdList)), Qt::QueuedConnection);
 #endif
 }
 
diff --git a/src/plugins/messageservices/pop/popservice.cpp b/src/plugins/messageservices/pop/popservice.cpp
index 98be8300..b8215eb3 100644
--- a/src/plugins/messageservices/pop/popservice.cpp
+++ b/src/plugins/messageservices/pop/popservice.cpp
@@ -328,7 +328,7 @@ PopService::PopService(const QMailAccountId &accountId)
     connect(&_client, SIGNAL(errorOccurred(QMailServiceAction::Status::ErrorCode, QString)), this, SLOT(errorOccurred(QMailServiceAction::Status::ErrorCode, QString)));
     connect(&_client, SIGNAL(updateStatus(QString)), this, SLOT(updateStatus(QString)));
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
 
     _client.setAccount(accountId);
     QMailAccountConfiguration accountCfg(accountId);
diff --git a/src/plugins/messageservices/smtp/smtpclient.cpp b/src/plugins/messageservices/smtp/smtpclient.cpp
index adbc5cef..c67a607e 100644
--- a/src/plugins/messageservices/smtp/smtpclient.cpp
+++ b/src/plugins/messageservices/smtp/smtpclient.cpp
@@ -116,7 +116,7 @@ SmtpClient::SmtpClient(QObject* parent)
     , credentials(nullptr)
 {
     connect(QMailStore::instance(), SIGNAL(accountsUpdated(const QMailAccountIdList&)), 
-            this, SLOT(accountsUpdated(const QMailAccountIdList&)));
+            this, SLOT(accountsUpdated(const QMailAccountIdList&)), Qt::QueuedConnection);
 }
 
 SmtpClient::~SmtpClient()
diff --git a/src/plugins/messageservices/smtp/smtpservice.cpp b/src/plugins/messageservices/smtp/smtpservice.cpp
index cf4ad0ff..44d085af 100644
--- a/src/plugins/messageservices/smtp/smtpservice.cpp
+++ b/src/plugins/messageservices/smtp/smtpservice.cpp
@@ -211,7 +211,7 @@ void SmtpService::onCapabilityFetchingActivityChanged(QMailServiceAction::Activi
                            << "Disconnect and reconnect the network connection or"
                            << "update the account to try again";
             connect(QMailStore::instance(), SIGNAL(accountsUpdated(QMailAccountIdList)),
-                    this, SLOT(onAccountsUpdated(QMailAccountIdList)));
+                    this, SLOT(onAccountsUpdated(QMailAccountIdList)), Qt::QueuedConnection);
         }
     }
 }
